[{"D:\\Desktop_Files\\ProjectX\\messaging-app\\src\\reportWebVitals.js":"1","D:\\Desktop_Files\\ProjectX\\messaging-app\\src\\App.js":"2","D:\\Desktop_Files\\ProjectX\\messaging-app\\src\\Sidebar.js":"3","D:\\Desktop_Files\\ProjectX\\messaging-app\\src\\index.js":"4","D:\\Desktop_Files\\ProjectX\\messaging-app\\src\\SidebarChat.js":"5","D:\\Desktop_Files\\ProjectX\\messaging-app\\src\\Chat.js":"6","D:\\Desktop_Files\\ProjectX\\messaging-app\\src\\firebase.js":"7","D:\\Desktop_Files\\ProjectX\\messaging-app\\src\\Login.js":"8","D:\\Desktop_Files\\ProjectX\\messaging-app\\src\\StateProvider.js":"9","D:\\Desktop_Files\\ProjectX\\messaging-app\\src\\reducer.js":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":989,"mtime":1607975979286,"results":"13","hashOfConfig":"12"},{"size":2139,"mtime":1607968328682,"results":"14","hashOfConfig":"12"},{"size":689,"mtime":1607964360819,"results":"15","hashOfConfig":"12"},{"size":1796,"mtime":1607975435010,"results":"16","hashOfConfig":"12"},{"size":4119,"mtime":1607972654196,"results":"17","hashOfConfig":"12"},{"size":629,"mtime":1607847967683,"results":"18","hashOfConfig":"12"},{"size":1216,"mtime":1607967625424,"results":"19","hashOfConfig":"12"},{"size":383,"mtime":1607963822503,"results":"20","hashOfConfig":"12"},{"size":432,"mtime":1607964226500,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7bahml",{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Desktop_Files\\ProjectX\\messaging-app\\src\\reportWebVitals.js",[],"D:\\Desktop_Files\\ProjectX\\messaging-app\\src\\App.js",["45","46"],"import './App.css'; // 2.33.20\nimport React, { useState } from 'react';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport Login from './Login';\nimport { useStateValue } from './StateProvider';\n\nfunction App() {\n\n  const [{ user }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app__body\">\n          <Router>\n            <Sidebar />\n            <Switch> \n              <Route path=\"/rooms/:roomId\">      \n                <Chat />\n              </Route>\n              <Route path=\"/\">\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n// firebase login\n// firebase init\n// select hosting => spacebar\n// use an existing project => important\n// select project\n// build\n// Y => single page app\n// npm run build\n// firebase deploy\n","D:\\Desktop_Files\\ProjectX\\messaging-app\\src\\Sidebar.js",["47","48","49"],"import { Avatar, IconButton } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport './Sidebar.css';\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport SidebarChat from './SidebarChat';\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n\r\n    const [seed, setSeed] = useState('');\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    useEffect (() => {\r\n\r\n        const unsubscribe = db.collection('rooms').onSnapshot(snapshot => {\r\n            setRooms(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data(),\r\n            })))\r\n        })\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__header\">\r\n                <Avatar src={user?.photoURL} />\r\n                <div className=\"sidebar__headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton> \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__search\">\r\n                <div className=\"sidebar__searchContainer\">\r\n                    <SearchOutlined />\r\n                    <input type=\"text\" placeholder=\"Search or start a new chat\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__chats\">\r\n                <SidebarChat addNewChat />\r\n                {rooms.map(room => (\r\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","D:\\Desktop_Files\\ProjectX\\messaging-app\\src\\index.js",[],"D:\\Desktop_Files\\ProjectX\\messaging-app\\src\\SidebarChat.js",[],"D:\\Desktop_Files\\ProjectX\\messaging-app\\src\\Chat.js",["50"],"import { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, MoreVert, SearchOutlined } from '@material-ui/icons';\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport \"./Chat.css\";\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport firebase from 'firebase';\r\n\r\nfunction Chat() {\r\n\r\n    const [seed, setSeed] = useState('');\r\n    const [input, setInput] = useState(\"\");\r\n    const { roomId } = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const [{ user }, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n        if (roomId) {\r\n            db\r\n                .collection('rooms')\r\n                .doc(roomId)\r\n                .onSnapshot(snapshot => (\r\n                setRoomName(snapshot.data().name)\r\n            ));\r\n\r\n            db\r\n                .collection('rooms')\r\n                .doc(roomId)\r\n                .collection('messages')\r\n                .orderBy('timestamp', 'asc')\r\n                .onSnapshot(snapshot => (\r\n                    setMessages(snapshot.docs.map(doc => doc.data()))\r\n                ))\r\n        }\r\n    }, [roomId])\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        // console.log('You typed >>> ', input);\r\n\r\n        db\r\n            .collection('rooms')\r\n            .doc(roomId)\r\n            .collection('messages')\r\n            .add({\r\n                message: input,\r\n                name: user.displayName,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            });\r\n\r\n        setInput(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>\r\n                        {roomName}\r\n                    </h3>\r\n                    <p>\r\n                        Last seen{\" \"}\r\n                        {new Date(\r\n                            messages[messages.length -1]?.timestamp?.toDate()).toUTCString()}\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"chat__body\"> {/* okay for demo purpose, but two people can have the same name, so for production use the id we get back from google ( professional ) */}\r\n                {messages.map(message => (\r\n                    <p className={`chat__message ${message.name === user.displayName && 'chat__receiver'}`}>\r\n                        <span className=\"chat__name\">\r\n                            {message.name}\r\n                        </span>\r\n                        {message.message}\r\n                        <span className=\"chat__timestamp\">\r\n                            {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                        </span>\r\n                    </p>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"chat__footer\">\r\n                <InsertEmoticonIcon />\r\n                <form>\r\n                    <input type=\"text\" value={input} onChange={(e) => setInput(e.target.value)} placeholder=\" Type a message\"/>\r\n                    <button onClick={sendMessage} type=\"submit\">\r\n                        Send the message\r\n                    </button>\r\n                </form>\r\n                <MicIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;\r\n","D:\\Desktop_Files\\ProjectX\\messaging-app\\src\\firebase.js",[],"D:\\Desktop_Files\\ProjectX\\messaging-app\\src\\Login.js",["51"],"D:\\Desktop_Files\\ProjectX\\messaging-app\\src\\StateProvider.js",[],"D:\\Desktop_Files\\ProjectX\\messaging-app\\src\\reducer.js",[],{"ruleId":"52","severity":1,"message":"53","line":2,"column":17,"nodeType":"54","messageId":"55","endLine":2,"endColumn":25},{"ruleId":"52","severity":1,"message":"56","line":11,"column":20,"nodeType":"54","messageId":"55","endLine":11,"endColumn":28},{"ruleId":"52","severity":1,"message":"57","line":16,"column":12,"nodeType":"54","messageId":"55","endLine":16,"endColumn":16},{"ruleId":"52","severity":1,"message":"58","line":16,"column":18,"nodeType":"54","messageId":"55","endLine":16,"endColumn":25},{"ruleId":"52","severity":1,"message":"56","line":17,"column":22,"nodeType":"54","messageId":"55","endLine":17,"endColumn":30},{"ruleId":"52","severity":1,"message":"56","line":20,"column":22,"nodeType":"54","messageId":"55","endLine":20,"endColumn":30},{"ruleId":"59","severity":1,"message":"60","line":10,"column":12,"nodeType":"61","messageId":"62","endLine":10,"endColumn":14},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'seed' is assigned a value but never used.","'setSeed' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected"]